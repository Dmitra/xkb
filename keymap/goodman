xkb_keymap {
    xkb_keycodes {
        include "evdev+aliases(qwerty)"
    };
    xkb_types {
        include "complete"
    };
    xkb_compat {
        include "complete"
        interpret Cyrillic_ya+Exactly(None) {
            action = RedirectKey(keycode=<AB01>, clearmodifiers=Mod1, modifiers=Control);
        };
        interpret Cyrillic_che+Exactly(None) {
            action = RedirectKey(keycode=<AB02>, clearmodifiers=Mod1, modifiers=Control);
        };
        interpret Cyrillic_es+Exactly(None) {
            action = RedirectKey(keycode=<AB03>, clearmodifiers=Mod1, modifiers=Control);
        };
        interpret Cyrillic_em+Exactly(None) {
            action = RedirectKey(keycode=<AB04>, clearmodifiers=Mod1, modifiers=Control);
        };
        interpret Cyrillic_EM+Exactly(None) {
            action = RedirectKey(keycode=<AB04>, clearmodifiers=Mod1, modifiers=Control);
        };
        interpret Cyrillic_i+Exactly(None) {
            action = RedirectKey(keycode=<INS>, clearmodifiers=Mod1, modifiers=Shift);
        };
        interpret Cyrillic_ef+Exactly(None) {
            action = RedirectKey(keycode=<AC01>, clearmodifiers=Mod1, modifiers=Control);
        };
        interpret osfLeft {
            action = RedirectKey(keycode=<LEFT>, clearmodifiers=Mod1);
        };
        interpret Cyrillic_O+Exactly(None) {
            action = RedirectKey(keycode=<LEFT>, clearmodifiers=Mod1+Shift, modifiers=Control);
        };
        interpret osfRight {
            action = RedirectKey(keycode=<RGHT>, clearmodifiers=Mod1);
        };
        interpret Cyrillic_de {
            action = RedirectKey(keycode=<RGHT>, clearmodifiers=Mod1+Shift, modifiers=Control);
        };
        interpret osfUp {
            action = RedirectKey(keycode=<UP>, clearmodifiers=Mod1);
        };
        interpret osfDown {
            action = RedirectKey(keycode=<DOWN>, clearmodifiers=Mod1);
        };
        interpret Cyrillic_EL {
            action = RedirectKey(keycode=<DOWN>, clearmodifiers=Mod1, modifiers=Alt+Shift);
        };
        interpret osfBeginLine {
            action = RedirectKey(keycode=<HOME>, clearmodifiers=Mod1+Shift);
        };
        interpret osfEndLine {
            action = RedirectKey(keycode=<END>, clearmodifiers=Mod1+Shift);
        };
        interpret Cyrillic_te+Exactly(None) {
            action = RedirectKey(keycode=<AC04>, clearmodifiers=Mod1, modifiers=Control);
        };
        interpret Cyrillic_yeru+Exactly(None) {
            action = RedirectKey(keycode=<AC02>, clearmodifiers=Mod1, modifiers=Control);
        };
        interpret Cyrillic_en+Exactly(None) {
            action = RedirectKey(keycode=<LEFT>, clearmodifiers=Mod1, modifiers=Alt+Hyper);
        };
        interpret Cyrillic_ghe+Exactly(None) {
            action = RedirectKey(keycode=<TAB>, clearmodifiers=Mod1, modifiers=Control+Shift);
        };
        interpret Cyrillic_GHE+Exactly(None) {
            action = RedirectKey(keycode=<TAB>, clearmodifiers=Mod1, modifiers=Control);
        };
        interpret Cyrillic_shcha+Exactly(None) {
            action = RedirectKey(keycode=<TAB>, clearmodifiers=Mod1, modifiers=Control);
        };
        interpret Cyrillic_ze+Exactly(None) {
            action = RedirectKey(keycode=<RGHT>, clearmodifiers=Mod1, modifiers=Alt+Hyper);
        };
        interpret Cyrillic_softsign+Exactly(None) {
            action = RedirectKey(keycode=<BKSP>, clearmodifiers=Mod1);
        };
        interpret Cyrillic_SOFTSIGN+Exactly(None) {
            action = RedirectKey(keycode=<BKSP>, clearmodifiers=Mod1+Shift, modifiers=Control);
        };
        interpret Cyrillic_shorti+Exactly(None) {
            action = RedirectKey(keycode=<AD01>, clearmodifiers=Mod1, modifiers=Control);
        };
        interpret Cyrillic_SHORTI+Exactly(None) {
            action = RedirectKey(keycode=<AD07>, clearmodifiers=Mod1, modifiers=Control);
        };
        interpret osfDelete {
            action = RedirectKey(keycode=<DELE>, clearmodifiers=Mod1);
        };
        interpret Cyrillic_YU+Exactly(None) {
            action = RedirectKey(keycode=<DELE>, clearmodifiers=Mod1+Shift, modifiers=Control);
        };
        interpret Cyrillic_shha+Exactly(None) {
            action = RedirectKey(keycode=<AE11>, clearmodifiers=Mod1, modifiers=Control);
        };
        interpret Cyrillic_SHHA+Exactly(None) {
            action = RedirectKey(keycode=<AE12>, clearmodifiers=Mod1, modifiers=Control);
        };
    };
    xkb_symbols {
        include "pc+us(workman)"
        include "inet(evdev)"
        include "capslock(swapescape)"
        include "compose(rctrl)"
        key <LALT> {
            type[Group1] = "ONE_LEVEL",
            symbols[Group1] = [ ISO_Level5_Shift ]
        };
        modifier_map Mod1 { <LALT> };
        key <TAB> {
            type[Group1] = "EIGHT_LEVEL_ALPHABETIC",
            symbols[Group1] = [ Tab, Tab, Cyrillic_GHE, Cyrillic_GHE, Cyrillic_GHE, Cyrillic_GHE, Cyrillic_GHE, Cyrillic_GHE ]
        };
        key <AB01> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ z, Z, Cyrillic_ya, Cyrillic_ya, Cyrillic_ya, Cyrillic_ya, Cyrillic_ya, Cyrillic_ya ]
        };
        key <AB02> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ x, X, Cyrillic_che, Cyrillic_che, Cyrillic_che, Cyrillic_che, Cyrillic_che, Cyrillic_che ]
        };
        key <AB03> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ m, M, Cyrillic_es, Cyrillic_es, Cyrillic_es, Cyrillic_es, Cyrillic_es, Cyrillic_es ]
        };
        key <AB04> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ c, C, Cyrillic_em, Cyrillic_em, Cyrillic_em, Cyrillic_EM, Cyrillic_EM, Cyrillic_EM ]
        };
        key <AB05> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ v, V, Cyrillic_i, Cyrillic_i, Cyrillic_i, Cyrillic_i, Cyrillic_i, Cyrillic_i ]
        };
        key <AB07> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ l, L, Cyrillic_softsign, Cyrillic_softsign, Cyrillic_softsign, Cyrillic_SOFTSIGN, Cyrillic_SOFTSIGN, Cyrillic_SOFTSIGN ]
        };
        key <AB09> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ period, greater, osfDelete, osfDelete, osfDelete, Cyrillic_YU, Cyrillic_YU, Cyrillic_YU ]
        };
        key <AB10> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ slash, question, Cyrillic_SHORTI, Cyrillic_SHORTI, Cyrillic_SHORTI, Cyrillic_SHORTI, Cyrillic_SHORTI, Cyrillic_SHORTI ]
        };
        key <AC01> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ a, A, Cyrillic_ef, Cyrillic_ef, Cyrillic_ef, Cyrillic_ef, Cyrillic_ef, Cyrillic_ef ]
        };
        key <AC02> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ s, S, Cyrillic_yeru, Cyrillic_yeru, Cyrillic_yeru, Cyrillic_yeru, Cyrillic_yeru, Cyrillic_yeru ]
        };
        key <AC04> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ t, T, Cyrillic_te, Cyrillic_te, Cyrillic_te, Cyrillic_te, Cyrillic_te, Cyrillic_te ]
        };
        key <AC06> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ y, Y, downarrow, uparrow, osfBeginLine, osfBeginLine, osfBeginLine, osfBeginLine ]
        };
        key <AC07> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ n, N, osfLeft, osfLeft, osfLeft, Cyrillic_O, Cyrillic_O, Cyrillic_O ]
        };
        key <AC08> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ e, E, osfDown, osfDown, osfDown, Cyrillic_EL, Cyrillic_EL, Cyrillic_EL ]
        };
        key <AC09> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ o, O, osfRight, osfRight, osfRight, Cyrillic_de, Cyrillic_de, Cyrillic_de ]
        };
        key <AC10> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ i, I, osfEndLine, osfEndLine, osfEndLine, osfEndLine, osfEndLine, osfEndLine ]
        };
        key <AD01> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ q, Q, Cyrillic_shorti, Cyrillic_shorti, Cyrillic_shorti, Cyrillic_shorti, Cyrillic_shorti, Cyrillic_shorti ]
        };
        key <AD06> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ j, J, Cyrillic_en, Cyrillic_en, Cyrillic_en, Cyrillic_en, Cyrillic_en, Cyrillic_en ]
        };
        key <AD07> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ f, F, Cyrillic_ghe, Cyrillic_ghe, Cyrillic_ghe, Cyrillic_ghe, Cyrillic_ghe, Cyrillic_ghe ]
        };
        key <AD08> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ u, U, osfUp, osfUp, osfUp, osfUp, osfUp, osfUp ]
        };
        key <AD09> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ p, P, Cyrillic_shcha, Cyrillic_shcha, Cyrillic_shcha, Cyrillic_shcha, Cyrillic_shcha, Cyrillic_shcha ]
        };
        key <AD10> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ semicolon, colon, Cyrillic_ze, Cyrillic_ze, Cyrillic_ze, Cyrillic_ze, Cyrillic_ze, Cyrillic_ze ]
        };
        key <AE11> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ minus, underscore, Cyrillic_shha, Cyrillic_shha, Cyrillic_shha, Cyrillic_shha, Cyrillic_shha, Cyrillic_shha ]
        };
        key <AE12> {
            type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
            symbols[Group1] = [ equal, plus, Cyrillic_SHHA, Cyrillic_SHHA, Cyrillic_SHHA, Cyrillic_SHHA, Cyrillic_SHHA, Cyrillic_SHHA ]
        };
    };
    xkb_geometry {
        include "pc(pc105)"
    };
};